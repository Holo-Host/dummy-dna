name: CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lints:
    name: Lints
    timeout-minutes: 50
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: âš¡ Restore cache
        uses: actions/cache/restore@v3
        with:
          path: |
            .cargo
            target
          key: ${{ runner.os }}-build-happ-${{ hashFiles('Cargo.lock') }}

      - name: ðŸ”¨ Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: ðŸ”Ž Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    runs-on: ubuntu-latest
    needs:
      - lints
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Fetch source code
        uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v27

      - name: Set up cachix
        uses: cachix/cachix-action@v14
        with:
          name: holochain-ci

      - name: Build Nix packages
        run: nix develop -c $SHELL -c "echo Nix packages built"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore zome build
        uses: actions/cache/restore@v3
        with:
          path: |
            .cargo
            target
          key: ${{ runner.os }}-build-happ-${{ hashFiles('Cargo.lock') }}

      - name: ðŸ”Ž Build happ
        run: make nix-build

      - name: Save build to cache
        uses: actions/cache/save@v3
        with:
          path: |
            .cargo
            target
          key: ${{ runner.os }}-build-happ-${{ hashFiles('Cargo.lock') }}

      - name: ðŸ”Ž Run all tests
        run: make nix-test
