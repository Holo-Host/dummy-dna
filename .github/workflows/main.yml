name: Main

on:
  push:
    branches: [main]

jobs:
  release:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Fetch source code
      uses: actions/checkout@v2
    - name: Use Nix
      uses: cachix/install-nix-action@v18
      with:
        install_url: https://releases.nixos.org/nix/nix-2.12.0/install
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Configure Nix substituters
      run: |
        set -xe
        mkdir -p ~/.config/nix/
        cp ./.github/nix.conf ~/.config/nix/
    - name: Use cachix
      uses: cachix/cachix-action@v10
      with:
        name: holochain-ci
    - name: Prepare Nix environment
      run: nix-shell --command "echo Completed"
    - name: Build
      run: nix-shell --run 'make build'
    - name: version
      run: |
        make version
        VERSION=$(make version)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      id: version
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ env.VERSION }}
        tag_name: ${{ env.VERSION }}
        body_path: version-manager.json
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload test.happ artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./test.happ
        asset_name: test.happ
        asset_content_type: application/happ
    - name: upload test.dna artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./test.dna
        asset_name: test.dna
        asset_content_type: application/dna
    - name: upload test-skip-proof.happ artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./test-skip-proof.happ
        asset_name: test-skip-proof.happ
        asset_content_type: application/happ